<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>baris.io</title><link>https://baris.io/</link><description>Recent content on baris.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 May 2021 00:00:36 +0200</lastBuildDate><atom:link href="https://baris.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Anatomy of a Dockerfile</title><link>https://baris.io/posts/anatomy-of-a-dockerfile/</link><pubDate>Sun, 02 May 2021 00:00:36 +0200</pubDate><guid>https://baris.io/posts/anatomy-of-a-dockerfile/</guid><description>What is a Dockerfile? Dockerfile is a text document containing commands which can be run in sequence to assemble a docker image.
A sample Dockerfile from the official docs looks like this
# syntax=docker/dockerfile:1FROMnode:12-alpineRUN apk add --no-cache python g++ makeWORKDIR/appCOPY . .RUN yarn install --productionCMD [&amp;#34;node&amp;#34;, &amp;#34;src/index.js&amp;#34;]Why do we need them? There are millions of images on dockerhub that we can directly start using with a command like this.
docker run -it --rm -d -p 8080:80 --name web nginx For various reasons, we may want to customize these base images.</description></item><item><title>2021 April Reading List</title><link>https://baris.io/posts/2021-april-reading-list/</link><pubDate>Fri, 30 Apr 2021 16:00:00 +0200</pubDate><guid>https://baris.io/posts/2021-april-reading-list/</guid><description>I will be sharing roughly grouped links to articles or videos I enjoyed during the month and this is the first one.
Architecture Heroku style deployments
build your own X
Porto - a modern software architecture pattern
GitOps recipe for progressive delivery
Istio telemetry
One Man SaaS one man SaaS architecture
tools of the trade
UML Diagrams has UML died without anyone noticing?
why UML really died?
Programming why is python so popular despite being so slow</description></item><item><title>Python Type Hints</title><link>https://baris.io/posts/python-typing/</link><pubDate>Tue, 27 Apr 2021 00:28:43 +0200</pubDate><guid>https://baris.io/posts/python-typing/</guid><description>The programming language I feel the most proficient and effective in is definitely Java, so I feel more at home with statically typed languages. Even though I really like Java and Spring Boot for large-scale web applications, Python is my go-to language for one-time-scripts, smaller apps and especially aws lambda functions
I&amp;rsquo;ve been writing a lot more python recently, and I really liked a library called typing. typing is a standard library module which provides a runtime to support type hints.</description></item><item><title>Infrastructure as Code</title><link>https://baris.io/posts/infrastructure-as-code/</link><pubDate>Sun, 25 Apr 2021 00:02:25 +0200</pubDate><guid>https://baris.io/posts/infrastructure-as-code/</guid><description>Infrastructure as Code is the practice of managing and provisioning resources through version controlled definition files.
Things to note beforehand
Cloud providers like AWS, Azure and GCP allow us to provision new resources in mere minutes or even seconds. Multiple deployments to production every day is not an exceptional thing anymore We want to use a similar infrastructure for multiple environments(dev,staging,prod etc.) and regions Infrastructure on cloud does not only mean hosting applications on a virtual machine It also includes services we can use like data stores, queues/topics, network components, access rights/permission models and much more Utilizing these resources efficiently will help us move forward much faster What problem does it solve?</description></item><item><title>About</title><link>https://baris.io/about/</link><pubDate>Wed, 21 Apr 2021 00:29:39 +0200</pubDate><guid>https://baris.io/about/</guid><description>Hey, I am Baris ðŸ‘‹ I am an engineer/geek from Turkey. I am currently working and living in Berlin.
This website will serve as a place to share what I am learning and working on. I also want to take more notes and have a deeper understanding of those topics while writing about them.
Things I am interested nowadays Observability / OpenTelemetry and OpenMetrics Infrastructure as Code / Terraform Reactive Java / WebFlux Serverless Computing / AWS Lambda Minimal and fast websites Programming languages I use the most Java Python Javascript I also want to write some code with Rust, Go and Kotlin as well.</description></item><item><title>Observability 101</title><link>https://baris.io/posts/observability/</link><pubDate>Mon, 19 Apr 2021 23:50:25 +0200</pubDate><guid>https://baris.io/posts/observability/</guid><description>Systems we build and maintain are becoming more complex and abstract with the increase in popularity of distributed systems, microservices, and cloud providers. With these new concepts, our view of failures has changed as well.
We have to assume things can and will break when we do not expect. So we have to make sure it is possible to understand what is happening in our services it any given time</description></item><item><title>Design Patterns - Singleton</title><link>https://baris.io/posts/singleton/</link><pubDate>Mon, 19 Apr 2021 23:49:53 +0200</pubDate><guid>https://baris.io/posts/singleton/</guid><description>Singleton is a design pattern that limits the instantiation of a class to a single instance and provides global access to it.
If we want to have only a single instance of a class, and it must be accessible from a well-defined access point we can use singletons. In recent years singletons are seen as bad practice but they are still one of the most well-known design patterns. They are used in logging, caching, hardware interfaces, and configuration/properties files.</description></item><item><title>Design Patterns - Builder</title><link>https://baris.io/posts/builder/</link><pubDate>Mon, 19 Apr 2021 23:48:35 +0200</pubDate><guid>https://baris.io/posts/builder/</guid><description>The builder pattern allows us to write readable and understandable code to build complex objects. It is generally used to handle the construction of objects that contain a lot of parameters. They are usually implemented as static inner classes. StringBuilder is a good example that is used a lot.
But first, let&amp;rsquo;s talk about the alternatives first.
Telescoping constructors In this pattern, we have multiple constructors to support multiple combinations of parameters to create an instance.</description></item></channel></rss>