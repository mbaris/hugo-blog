<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on baris.io</title><link>https://baris.io/posts/</link><description>Recent content in Posts on baris.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 Apr 2021 23:50:25 +0200</lastBuildDate><atom:link href="https://baris.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Observability 101</title><link>https://baris.io/posts/observability/</link><pubDate>Mon, 19 Apr 2021 23:50:25 +0200</pubDate><guid>https://baris.io/posts/observability/</guid><description>Observability is a measure of how well internal states of a system can be inferred from knowledge of its external outputs.</description></item><item><title>Design Patterns - Singleton</title><link>https://baris.io/posts/singleton/</link><pubDate>Mon, 19 Apr 2021 23:49:53 +0200</pubDate><guid>https://baris.io/posts/singleton/</guid><description>Singleton is a design pattern that limits the instantiation of a class to a single instance and provides global access to it.</description></item><item><title>Design Patterns - Builder</title><link>https://baris.io/posts/builder/</link><pubDate>Mon, 19 Apr 2021 23:48:35 +0200</pubDate><guid>https://baris.io/posts/builder/</guid><description>The builder pattern allows us to write readable and understandable code to build complex objects.</description></item></channel></rss>